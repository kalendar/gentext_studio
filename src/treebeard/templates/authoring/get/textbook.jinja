{% extends "base.jinja" %}

{% block title %}
  GOLE: {{ textbook.title }}
{% endblock %}

{% block body %}
  <div class="central-content vertical-list">
    <div class="flex flex-wrap justify-between">
      <h1>{{ textbook.title }}</h1>
      <AButton
        :hx-post="request.url_for('delete_textbook', ident=textbook.guid)"
        color="red"
        class="h-min w-min"
        hx-confirm="This will delete the entire textbook. Are you sure you want to do that?">
        Delete
      </AButton>
    </div>
    <Card
      class="group flex justify-between !rounded !border-gray-200 bg-inherit p-2 transition-colors duration-75 hover:bg-gray-100"
      :href="{{ request.url_for('update_textbook_get', ident=textbook.guid) }}">
      <p class="underlined">Details</p>
    </Card>

    <div class="flex flex-col gap-1">
      <div class="flex w-full items-center justify-between p-2">
        <h2>Topics</h2>
        <AButton
          :href="{{ request.url_for('create_topic_get', textbook_ident=textbook.guid) }}"
          color="none"
          circular
          class="border-sky-600 text-sky-600 hover:border-sky-700 hover:text-sky-700"
          icon="create" />
      </div>
      <div id="sortable-topics" class="flex flex-col gap-1">
        {% for topic in textbook.topics %}
          <Card
            class="group flex items-center justify-between gap-2 !rounded !border-gray-200 bg-inherit p-2 transition-colors duration-75 hover:bg-gray-100"
            :data-guid="topic.guid"
            :href="request.url_for('update_topic_get', topic_ident=topic.guid, textbook_ident=topic.textbook_guid)">
            <i
              class="sortable-handle text-gray-300 hover:text-gray-400"
              data-lucide="grip-vertical"></i>
            <p class="underlined">{{ topic.name }}</p>
            <div class="grow"></div>
            <AButton
              :hx-post="request.url_for('delete_topic', ident=topic.guid)"
              color="none"
              icon="delete"
              circular
              class="scale-80 border-red-500 text-red-500 opacity-0 group-hover:scale-100 group-hover:opacity-100 hover:border-red-600 hover:text-red-600"
              hx-confirm="Are you sure you want to delete this topic?" />
          </Card>
        {% endfor %}
      </div>
    </div>

    <div class="flex flex-col gap-1">
      <div class="flex w-full items-center justify-between p-2">
        <h2>Activities</h2>
        <AButton
          :href="request.url_for('create_activity_get', textbook_ident=textbook.guid)"
          color="none"
          circular
          class="border-sky-500 text-sky-600 hover:border-sky-700 hover:text-sky-700"
          icon="create" />
      </div>

      <div id="sortable-activities" class="flex flex-col gap-1">
        {% for activity in textbook.activities %}
          <Card
            class="group flex items-center justify-between gap-2 !rounded !border-gray-200 bg-inherit p-2 transition-colors duration-75 hover:bg-gray-100"
            :data-guid="activity.guid"
            :href="request.url_for('update_activity_get', activity_ident=activity.guid, textbook_ident=activity.textbook_guid)">
            <i
              class="sortable-handle text-gray-300 hover:text-gray-400"
              data-lucide="grip-vertical"></i>
            <p class="underlined">{{ activity.name }}</p>
            <div class="grow"></div>
            <AButton
              :hx-post="request.url_for('delete_activity', ident=activity.guid)"
              color="none"
              icon="delete"
              circular
              class="scale-80 border-red-500 text-red-500 opacity-0 group-hover:scale-100 group-hover:opacity-100 hover:border-red-600 hover:text-red-600"
              hx-confirm="Are you sure you want to delete this activity?" />
          </Card>
        {% endfor %}
      </div>
    </div>
  </div>
{% endblock %}

{% block script %}
  <script>
    var sortableTopics = document.getElementById("sortable-topics");
    var sortableActivities = document.getElementById("sortable-activities");

    new Sortable(sortableTopics, {
      handle: ".sortable-handle",
      dataIdAttr: "data-guid",
      animation: 150,
      onEnd: function (evt) {
        if (evt.oldIndex != evt.newIndex) {
          fetch("{{request.url_for('reorder_topics')}}", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(this.toArray()),
          }).catch((error) => {
            console.error("Fetch error:", error);
          });
        }
      },
    });

    new Sortable(sortableActivities, {
      handle: ".sortable-handle",
      dataIdAttr: "data-guid",
      animation: 150,
      onEnd: function (evt) {
        if (evt.oldIndex != evt.newIndex) {
          fetch("{{request.url_for('reorder_activities')}}", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(this.toArray()),
          }).catch((error) => {
            console.error("Fetch error:", error);
          });
        }
      },
    });
  </script>
{% endblock %}
